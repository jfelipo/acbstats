https://observablehq.com/@d3/chart-template?collection=@d3/d3-axis

This notebook demonstrates conventions for basic xy charts in D3. Fork it as a starting point to create your own chart.

Bar chart race: https://observablehq.com/@d3/bar-chart-race
dot plot: https://observablehq.com/@d3/dot-plot
and the wealth and health of nations: https://observablehq.com/@mbostock/the-wealth-health-of-nations

give ideas on how to handle updated data

w3c combobox with grid autocomplete popup example: https://www.w3.org/TR/wai-aria-practices-1.2/examples/combobox/grid-combo.html

very neat!

Setting up digital ocean as an s3 endpoint: https://docs.digitalocean.com/products/spaces/resources/s3cmd/

$ s3cmd --configure

Enter new values or accept defaults in brackets with Enter.
Refer to user manual for detailed description of all options.

Access key and Secret key are your identifiers for Amazon S3. Leave them empty for using the env variables.
Access Key: <here>
Secret Key: <here>
Default Region [US]:

Use "s3.amazonaws.com" for S3 Endpoint and not modify it to the target Amazon S3.
S3 Endpoint [s3.amazonaws.com]: nyc3.digitaloceanspaces.com

Use "%(bucket)s.s3.amazonaws.com" to the target Amazon S3. "%(bucket)s" and "%(location)s" vars can be used
if the target S3 system supports dns based buckets.
DNS-style bucket+hostname:port template for accessing a bucket [%(bucket)s.s3.amazonaws.com]: %(bucket)s.nyc3.digitaloceanspaces.com

Encryption password is used to protect your files from reading
by unauthorized persons while in transfer to S3
Encryption password: <censored>
Path to GPG program [/usr/local/bin/gpg]:

When using secure HTTPS protocol all communication with Amazon S3
servers is protected from 3rd party eavesdropping. This method is
slower than plain HTTP, and can only be proxied with Python 2.7 or newer
Use HTTPS protocol [Yes]:

On some networks all internet access must go through a HTTP proxy.
Try setting it here if you can't connect to S3 directly
HTTP Proxy server name:

New settings:
  Access Key: <here>
  Secret Key: <here>
  Default Region: US
  S3 Endpoint: nyc3.digitaloceanspaces.com
  DNS-style bucket+hostname:port template for accessing a bucket: %(bucket)s.nyc3.digitaloceanspaces.com
  Encryption password: <here>
  Path to GPG program: /usr/local/bin/gpg
  Use HTTPS protocol: True
  HTTP Proxy server name:
  HTTP Proxy server port: 0

Test access with supplied credentials? [Y/n]
Please wait, attempting to list all buckets...
Success. Your access key and secret key worked fine :-)

Now verifying that encryption works...
Success. Encryption and decryption worked fine :-)

Save settings? [y/N] y
Configuration saved to '/Users/llimllib/.s3cfg'

Good example diamond chart:

https://twitter.com/owenlhjphillips/status/1572196371322765315

he gives some resources for R:

https://gist.github.com/benmarwick/8cf22ecb74ac511f8ac1c70aef6038a7
https://unarsezer.medium.com/how-to-make-peter-mckeevers-diamond-chart-in-ggplot2-8b9321e7b2ee
https://gist.github.com/Henryjean/885108b96e5e556d9429e9484e072ddb

Owen Phillips gave his R code for the plot:

https://gist.github.com/Henryjean/9d6c624ce1768f479c6046cb08803a56
https://twitter.com/owenlhjphillips/status/1582359090478559233

---------------

Trying out superset. install instructions: https://superset.apache.org/docs/installation/installing-superset-using-docker-compose

installing it seems to be a reasonably legit PITA!

git clone https://github.com/apache/superset.git
cd superset
docker-compose -f docker-compose-non-dev.yml pull
# this takes a while, don't be impatient. You can't start until you get "Creating database reference for examples"
docker-compose -f docker-compose-non-dev.yml up

# login with admin/admin
open http://localhost:8088
